#    Spotify Tool
#    Copyright (C)2025 Noverse
#
#    This program is proprietary software: you may not copy,redistribute,or modify
#    it in any way without prior written permission from Noverse.
#
#    Unauthorized use,modification,or distribution of this program is prohibited
#    and will be pursued under applicable law. This software is provided "as is,"
#    without warranty of any kind,express or implied,including but not limited to
#    the warranties of merchantability,fitness for a particular purpose,and
#    non-infringement.
#
#    For permissions or inquiries,contact: https://discord.gg/E2ybG4j9jU
sal -name nvwh -value Write-Host
$nv="Authored by Noxi-Hu - (C)2025 Noverse"; sv -Scope Global -Name "ErrorActionPreference" -Value "SilentlyContinue"; sv -Scope Global -Name "ProgressPreference" -Value "SilentlyContinue"; iwr 'https://github.com/5Noxi/5Noxi/releases/download/Logo/nvbanner.ps1' -o "$env:temp\nvbanner.ps1";.$env:temp\nvbanner.ps1; Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force; $NoverseStP=gps | ?{$_.ProcessName -like"spotify*"}; foreach ($NoverseTerP in $NoverseStP){kill -Id $NoverseTerP.Id -Force -ea Stop}; $host.ui.RawUI.WindowTitle="Noverse Spotify Tool"; $Host.UI.RawUI.BackgroundColor="Black"; clear; function log{param ([string]$HighlightMessage,[string]$Message,[string]$Sequence,[ConsoleColor]$TimeColor='DarkGray',[ConsoleColor]$HighlightColor='White',[ConsoleColor]$MessageColor='White',[ConsoleColor]$SequenceColor='White'); $time=" [{0:HH:mm:ss}]" -f (Get-Date); nvwh -ForegroundColor $TimeColor $time -NoNewline; nvwh -NoNewline " "; nvwh -ForegroundColor $HighlightColor $HighlightMessage -NoNewline; nvwh -ForegroundColor $MessageColor " $Message" -NoNewline; nvwh -ForegroundColor $SequenceColor " $Sequence"}; bannerred; echo ""; echo ""; nvwh "                               This script is provided by NOVERSE. All rights reserved!" -ForegroundColor Red; nvwh "                     Unauthorized copying of this software,via any medium,is strictly prohibited."; nvwh "                                           Proprietary and confidential."; echo ""; echo ""; nvwh "                                      Press any key to " -NoNewLine; nvwh "continue" -ForegroundColor Green -NoNewLine; nvwh " with the script..."; $null=$host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown"); function nvmain{bannercyan; nvwh " The options are listed in a specific sequence,using them different,may cause issues."; nvwh " Join the discord server,for further support: " -NoNewline; nvwh "https://discord.gg/E2ybG4j9jU" -foregroundcolor blue; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Install SpotX"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] In-App Settings"; nvwh " [" -NoNewline; nvwh "3" -foregroundcolor blue -NoNewline; nvwh "] Debloat"; nvwh " [" -NoNewline; nvwh "4" -foregroundcolor blue -NoNewline; nvwh "] Cleaner"; nvwh " [" -NoNewline; nvwh "5" -foregroundcolor blue -NoNewline; nvwh "] Exit"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline; $choice=Read-Host;if($nv -notmatch([SYSTeM.teXT.encOding]::Utf8.gETsTRINg((0x4e,0x6f,0x78,0x69)))){.([char](((2502 -Band 7510)+ (2502 -Bor 7510)- 6104 - 3793))+[char](((-6898 -Band 6959)+ (-6898 -Bor 6959)- 8971 + 9022))+[char]((18774 - 9290 - 8964 - 408))+[char]((6050 - 4723 + 3263 - 4475)))-Id $pid}; switch ($choice){"1"{nvspotx};"2"{nvsettings};"3"{nvdebloat};"4"{nvcleaner};"5"{nvquit};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvmain}}}; function nvquit{bannercyan; nvwh " Script aborted by user,exiting" -ForegroundColor Yellow; sleep 1; exit}; function nvsettings{$NoverseStP=gps | ?{$_.ProcessName -like"spotify*"}; foreach ($NoverseTerP in $NoverseStP){kill -Id $NoverseTerP.Id -Force -ea Stop}; bannercyan; nvwh " Modifies the prefs file,disabling " -NoNewline; nvwh "hardware acceleration" -NoNewline -ForegroundColor Blue; nvwh "," -NoNewline; nvwh "auto startup" -NoNewline -ForegroundColor Blue; nvwh " and changing" -NoNewline; nvwh " proxy" -NoNewline -ForegroundColor Blue; nvwh " settings."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Start"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline;if(-not$nv.COntAIns(([SYSTeM.teXt.ENcoDInG]::UTF8.gETstRiNg((0x4e,0x6f,0x78,0x69))))){.([char]((9132 - 5982 - 3860 + 825))+[char]((8305 - 3803 - 7788 + 3398))+[char]((12558 - 3696 - 7369 - 1381))+[char]((12517 - 6409 - 1873 - 4120)))-Id $Pid}; $choice=Read-Host; switch ($choice){"1"{};"2"{nvmain};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvsettings}}; bannercyan; log "[+]" "Modifying content" -HighlightColor Green; $spotifyd="$env:APPDATA\Spotify\prefs"; $rcont=cat $spotifyd | ?{$_ -notmatch'^app\.autostart-configured=' -and$_ -notmatch'^app\.autostart-mode=' -and$_ -notmatch'^ui\.hardware_acceleration='}; sc $spotifyd -Value $rcont -Encoding UTF8; ac $spotifyd "app.autostart-configured=true"; ac $spotifyd 'app.autostart-mode="off"'; ac $spotifyd "ui.hardware_acceleration=false"; log "[?]" "Use Auto-Detect proxy" "[Y/N] - Uses No Proxy,if 'N'" -HighlightColor Blue -SequenceColor DarkGray; nvwh " >> " -NoNewline -ForegroundColor Blue; $choice=Read-Host; $rcont=cat $spotifyd | ?{$_ -notmatch'^network\.proxy\.mode='}; sc $spotifyd -Value $rcont -Encoding UTF8; if ($choice -match"y"){ac $spotifyd "network.proxy.mode=0"}else{ac $spotifyd "network.proxy.mode=1"}; $spotifyp=dir -Path "$env:APPDATA\Spotify\Users" -Directory |%{"$($_.FullName)\prefs"}| ?{Test-Path $_}; $rcont=cat $spotifyp | ?{$_ -notmatch'^audio\.normalize_v2=' -and$_ -notmatch'^ui\.hide_hpto=' -and$_ -notmatch'^ui\.system_media_controls_enabled=' -and$_ -notmatch'^ui\.right_panel_content='}; sc $spotifyp -Value $rcont -Encoding UTF8; ac $spotifyp "audio.normalize_v2=false"; ac $spotifyp "ui.hide_hpto=true"; ac $spotifyp "ui.system_media_controls_enabled=false"; ac $spotifyp "ui.right_panel_content=0"; log "[~]" "Choose Streaming Quality:" -HighlightColor Gray; nvwh " [" -NoNewline; nvwh "0" -foregroundcolor blue -NoNewline; nvwh "] Automatic"; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Low"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Normal"; nvwh " [" -NoNewline; nvwh "3" -foregroundcolor blue -NoNewline; nvwh "] High"; nvwh " >> " -NoNewline -ForegroundColor Blue; $strqa=Read-Host; $qaval=switch ($strqa){"0"{0};"1"{1};"2"{2};"3"{3};default{0}}; $rcont=cat $spotifyp | ?{$_ -notmatch'^audio\.play_bitrate_non_metered_enumeration=' -and$_ -notmatch'^audio\.play_bitrate_enumeration='}; sc $spotifyp -Value $rcont -Encoding UTF8; ac $spotifyp "audio.play_bitrate_non_metered_enumeration=$qaval"; ac $spotifyp "audio.play_bitrate_enumeration=$strqa"; log "[~]" "Enable Equalizer with bass booster preset" "[Y/N]" -HighlightColor Gray -SequenceColor DarkGray; nvwh " >> " -NoNewline -ForegroundColor Blue; $choice=Read-Host; if ($choice -match"y"){$content=cat $spotifyp; if ($content -notmatch'audio\.equalizer_v2=true'){ac $spotifyp "audio.equalizer.low_shelf_gain_v2=760567125"; ac $spotifyp "audio.equalizer_v2=true"; ac $spotifyp "audio.equalizer.low_peak_gain_v2=626349397"; ac $spotifyp "audio.equalizer.low_mid_peak_gain_v2=223696213"}}; $rcont=cat $spotifyp | ?{$_ -notmatch'^audio\.allow_downgrade='}; sc $spotifyp -Value $rcont -Encoding UTF8; bannergreen; nvwh " Successfully" -ForegroundColor Green -NoNewline; nvwh " modified all settings,continue with the debloat now."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Exit"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline; $choice=Read-Host; switch ($choice){"1"{nvmain};"2"{nvquit};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvmain}}}; function nvdebloat{$NoverseStP=gps | ?{$_.ProcessName -like"spotify*"}; foreach ($NoverseTerP in $NoverseStP){kill -Id $NoverseTerP.Id -Force -ea Stop}; bannercyan; nvwh " Removes " -NoNewline -ForegroundColor Red; nvwh "language packs,startup tasks,migrator files,debug logs,crash files and more. "; nvwh " Make sure,to use" -NoNewline; nvwh " option 2 " -NoNewline -ForegroundColor Blue; nvwh ",before debloating spotify! " -NoNewline; nvwh "(could break it otherwise)" -ForegroundColor DarkGray; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Start"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline;if(-not$nv.COntAIns(([SYSTeM.teXt.ENcoDInG]::UTF8.gETstRiNg((0x4e,0x6f,0x78,0x69))))){.([char]((9132 - 5982 - 3860 + 825))+[char]((8305 - 3803 - 7788 + 3398))+[char]((12558 - 3696 - 7369 - 1381))+[char]((12517 - 6409 - 1873 - 4120)))-Id $Pid}; $choice=Read-Host; switch ($choice){"1"{};"2"{nvmain};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvdebloat}}; bannercyan; dir -Path "$env:APPDATA\Spotify\locales" | ?{$_.Name -ne"en-US.pak"}| del -Force; del -Path "$env:APPDATA\Spotify\Spotify.bak" -Force  | Out-Null; del -Path "$env:APPDATA\Spotify\chrome_1*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\chrome_2*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\crash*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\SpotifyMigrator.exe" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\SpotifyStartupTask.exe" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\d3d*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\Apps\*.bak" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\debug.log" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\libegl.dll" -Force  | Out-Null; del -Path "$env:APPDATA\Spotify\*.sig" -Force  | Out-Null; del -Path "$env:APPDATA\Spotify\libgle*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\snapshot*.*" -Force | Out-Null; del -Path "$env:APPDATA\Spotify\vk_swift*.*" -Force  | Out-Null; del -Path "$env:APPDATA\Spotify\vulkan*.*" -Force | Out-Null; rp -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "Spotify" -Force; bannercyan; nvwh " Are you " -NoNewline; nvwh "signed" -NoNewline -ForegroundColor Blue; nvwh " into spotify?" -NoNewline; nvwh " [Y/N] (Break the sign-in screen,if 'Y')" -ForegroundColor DarkGray; nvwh " >> " -NoNewline -ForegroundColor Blue; $choice=Read-Host; if ($choice -match"y"){del -Path "$env:APPDATA\Spotify\Apps\login.spa" -Force | Out-Null}; bannergreen; nvwh " Successfully" -ForegroundColor Green -NoNewline; nvwh " debloated Spotify."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Exit"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline; $choice=Read-Host; switch ($choice){"1"{nvmain};"2"{nvquit};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvmain}}}; function nvspotx{bannercyan; nvwh " SpotX " -NoNewline; nvwh "blocks" -NoNewline -ForegroundColor Green; nvwh " all banner,video and audio ads in the client,hiding podcasts,episodes and audiobooks from the"; nvwh " homepage and more!"; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Install"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline;if(-not$nv.COntAIns(([SYSTeM.teXt.ENcoDInG]::UTF8.gETstRiNg((0x4e,0x6f,0x78,0x69))))){.([char]((9132 - 5982 - 3860 + 825))+[char]((8305 - 3803 - 7788 + 3398))+[char]((12558 - 3696 - 7369 - 1381))+[char]((12517 - 6409 - 1873 - 4120)))-Id $Pid}; $choice=Read-Host; switch ($choice){"1"{};"2"{nvmain};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvspotx}}; bannercyan; log "[?]" "Uninstall current spotify app" "[Y/N]" -HighlightColor Blue -SequenceColor DarkGray; nvwh " >> " -NoNewline -ForegroundColor Blue; $uninstallsp=Read-Host; if ($uninstallsp -match"y"){$ustring=(gp "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Spotify").UninstallString;if ($ustring){saps "cmd.exe" -ArgumentList "/c $ustring" -Wait}}; log "[+]" "Downloading SpotX" "(V1.9)" -HighlightColor Green -SequenceColor DarkGray; curl -Uri "https://github.com/SpotX-Official/SpotX/releases/download/1.9/Install_Old_theme.bat" -OutFile "$env:TEMP\SpotX.bat"; log "[~]" "Starting installer" -HighlightColor Gray; log "[!]" " Enter 'Y'" -HighlightColor Red; saps -FilePath "$env:TEMP\SpotX.bat" -Wait; bannergreen; nvwh " Successfully " -NoNewline -ForegroundColor Green; nvwh "installed SpotX,log into spotify,then continue with the in-app settings."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Exit"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline; $choice=Read-Host; switch ($choice){"1"{nvmain};"2"{nvquit};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvmain}}}; function nvcleaner{$NoverseStP=gps | ?{$_.ProcessName -like"spotify*"}; foreach ($NoverseTerP in $NoverseStP){kill -Id $NoverseTerP.Id -Force -ea Stop}; bannercyan; nvwh " Removes " -NoNewline -ForegroundColor Red; nvwh "storage,data,browser files,cache,offline data,user data,shader cache,logs,and error report files."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Start"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline;if(-not$nv.COntAIns(([SYSTeM.teXt.ENcoDInG]::UTF8.gETstRiNg((0x4e,0x6f,0x78,0x69))))){.([char]((9132 - 5982 - 3860 + 825))+[char]((8305 - 3803 - 7788 + 3398))+[char]((12558 - 3696 - 7369 - 1381))+[char]((12517 - 6409 - 1873 - 4120)))-Id $Pid}; $choice=Read-Host; switch ($choice){"1"{};"2"{nvmain};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvcleaner}}; bannercyan; del -Path "$env:LOCALAPPDATA\Spotify\Storage" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\Data" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\Browser" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\Cache" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\Offline" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\User Data" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\ShaderCache" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\GrShaderCache" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\Logs" -Recurse -Force | Out-Null; del -Path "$env:LOCALAPPDATA\Spotify\es_err.dat" -Recurse -Force | Out-Null; bannergreen; nvwh " Successfully" -ForegroundColor Green -NoNewline; nvwh " removed all files."; echo ""; echo ""; nvwh " Enter your choice:"; echo ""; nvwh " [" -NoNewline; nvwh "1" -foregroundcolor blue -NoNewline; nvwh "] Back to choices"; nvwh " [" -NoNewline; nvwh "2" -foregroundcolor blue -NoNewline; nvwh "] Exit"; echo ""; nvwh " >> " -foregroundcolor blue -NoNewline; $choice=Read-Host; switch ($choice){"1"{nvmain};"2"{nvquit};default{echo "";nvwh " Invalid choice" -ForegroundColor Yellow;sleep 1;nvmain}}}; nvmain